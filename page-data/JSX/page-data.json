{"componentChunkName":"component---src-templates-blog-post-js","path":"/JSX/","result":{"data":{"site":{"siteMetadata":{"title":"모던리액트딥다이브 스터디를 하고 있습니다."}},"markdownRemark":{"id":"b1232c62-10ab-5b7e-8382-1a48124ad3fc","excerpt":"JSX 기초 강의 이 문서는 React 초보자를 위해 JSX의 개념과 기본 문법, 활용법을 설명합니다. 1. JSX란 무엇인가? JSX(JavaScript XML)는 JavaScript 코드 안에서 HTML…","html":"<h1>JSX 기초 강의</h1>\n<blockquote>\n<p>이 문서는 React 초보자를 위해 JSX의 개념과 기본 문법, 활용법을 설명합니다.</p>\n</blockquote>\n<hr>\n<h2>1. JSX란 무엇인가?</h2>\n<ul>\n<li><strong>JSX</strong>(JavaScript XML)는 JavaScript 코드 안에서 HTML과 유사한 문법을 사용할 수 있게 해 주는 <strong>문법 설탕</strong>입니다.</li>\n<li>내부적으로는 모두 <code class=\"language-text\">React.createElement()</code> 호출로 변환되어, 최종적으로 DOM에 렌더링됩니다.</li>\n</ul>\n<hr>\n<h2>2. JSX의 장점</h2>\n<ol>\n<li><strong>가독성</strong><br>\nHTML과 유사한 구조로 UI를 표현할 수 있어, 컴포넌트 구조를 한눈에 파악하기 쉽습니다.</li>\n<li><strong>강력한 표현식 삽입</strong><br>\n중괄호 <code class=\"language-text\">{}</code> 안에 JavaScript 표현식을 바로 넣을 수 있습니다.</li>\n<li><strong>툴링 지원</strong><br>\nVSCode, WebStorm 등 에디터에서 자동 완성·문법 검사·하이라이팅 지원이 잘 되어 있습니다.</li>\n<li><strong>커뮤니티 표준</strong><br>\n대부분의 튜토리얼, 라이브러리, 코드 예제가 JSX를 기준으로 작성되어 있습니다.</li>\n</ol>\n<hr>\n<h2>3. JSX 기본 문법</h2>\n<h3>3.1. HTML 태그와 유사하게 작성</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// JSX</span>\r\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, React!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\r\n\r\n<span class=\"token comment\">// 내부 변환(예시)</span>\r\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"h1\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello, React!\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>3.2. 중괄호 <code class=\"language-text\">{}</code> 로 표현식 삽입</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"슬기\"</span>\r\n<span class=\"token keyword\">const</span> greeting <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">안녕하세요, </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\">님!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3>3.3. 속성(props) 전달</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>리액트 강의<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">count</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<ul>\n<li>문자열은 큰따옴표(<code class=\"language-text\">\"...\"</code>) 안에,</li>\n<li>변수나 숫자 등은 중괄호(<code class=\"language-text\">{}</code>) 안에 작성합니다.</li>\n</ul>\n<hr>\n<h2>4. JSX 안에서 컴포넌트 사용하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">환영합니다, </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\">님!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Welcome</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>슬기<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\r\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Welcome</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>유리<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\r\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h2>5. 리스트 렌더링</h2>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">FruitList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"🍎 사과\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"🍊 귤\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"🍌 바나나\"</span><span class=\"token punctuation\">]</span>\r\n\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n      </span><span class=\"token punctuation\">{</span>fruits<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fruit<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>fruit<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\r\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\r\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">key</code> 속성은 React가 각 항목을 구분하기 위해 필요합니다.</li>\n</ul>\n<hr>\n<h2>6. 조건부 렌더링</h2>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">LoginMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> isLoggedIn <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n      </span><span class=\"token punctuation\">{</span>isLoggedIn <span class=\"token operator\">?</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">로그인 상태입니다.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span> <span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">로그인이 필요합니다.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\r\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h2>7. 인라인 스타일링</h2>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">StyledBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> boxStyle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">border</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1px solid #ccc\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token string\">\"16px\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">borderRadius</span><span class=\"token operator\">:</span> <span class=\"token string\">\"8px\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>boxStyle<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">스타일이 적용된 박스</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>객체 형태로 스타일을 정의하고, <code class=\"language-text\">style={}</code> 안에 넣습니다.</li>\n</ul>\n<hr>\n<h2>8. Babel REPL로 JSX 확인하기</h2>\n<ol>\n<li><a href=\"https://babeljs.io/repl\">Babel REPL</a>에 접속</li>\n<li>왼쪽에 JSX 코드를 붙여넣으면,</li>\n<li>오른쪽에 순수 JavaScript(<code class=\"language-text\">React.createElement</code> 호출)로 변환된 결과를 확인할 수 있습니다.</li>\n</ol>\n<hr>\n<h2>9. 연습 과제</h2>\n<ol>\n<li>\n<p><strong>카운터 버튼</strong></p>\n<ul>\n<li>버튼을 클릭할 때마다 숫자가 올라가는 컴포넌트를 만들어 보세요.</li>\n<li><code class=\"language-text\">useState</code> 훅과 JSX를 활용합니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>입력 폼</strong></p>\n<ul>\n<li><code class=\"language-text\">&lt;input></code>에 입력한 값을 화면에 실시간으로 보여주는 컴포넌트를 만들어 보세요.</li>\n<li><code class=\"language-text\">onChange</code> 이벤트와 상태(state) 관리를 연습합니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>간단 투두 리스트</strong></p>\n<ul>\n<li>텍스트 입력 후 “추가” 버튼을 누르면 리스트에 항목이 추가되는 기능 구현</li>\n<li>목록 렌더링, <code class=\"language-text\">key</code> 속성, 이벤트 핸들링을 종합적으로 활용합니다.</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2>10. 마무리</h2>\n<ul>\n<li>JSX는 처음엔 생소하지만, **“UI 구조를 선언적으로 표현”**하는 데 큰 도움을 줍니다.</li>\n<li>위 예제와 연습 과제를 통해 점차 익숙해지면, React 개발이 훨씬 즐거워질 거예요.</li>\n<li>추가 질문이나 예제가 필요하면 언제든 공부 노트에 적어두고 물어보세요!</li>\n</ul>\n<hr>","frontmatter":{"title":"JSX란 무엇인가?","date":"May 22, 2025","description":"(JavaScript XML)는 JavaScript 코드 안에서 HTML과 유사한 문법을 사용할 수 있게 해 주는 **문법 설탕**입니다. 내부적으로는 모두 `React.createElement()` 호출로 변환되어, 최종적으로 DOM에 렌더링됩니다."}},"previous":{"fields":{"slug":"/hello-world/"},"frontmatter":{"title":"Hello World"}},"next":{"fields":{"slug":"/비동기-동기/"},"frontmatter":{"title":"리액트에서 자주 사용하는 자바스크립트 문법"}}},"pageContext":{"id":"b1232c62-10ab-5b7e-8382-1a48124ad3fc","previousPostId":"968c5589-e80a-51c8-b603-755f45eb82f0","nextPostId":"bef5954f-9a8e-56fb-b5dd-0d53856a8653"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}