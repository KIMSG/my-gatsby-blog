{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"모던리액트딥다이브 스터디를 하고 있습니다."}},"allMarkdownRemark":{"nodes":[{"excerpt":"클로저(Closure) 입문 및 활용 정리 📘 1. 클로저란? 클로저는 함수가 선언될 당시의 스코프(lexical environment)를 기억하는 함수입니다. 함수가 실행된 이후에도 그 스코프에 접근할 수 있는 함수를 클로저라고 부릅니다. 🔹…","fields":{"slug":"/클로저의 활용/"},"frontmatter":{"date":"May 22, 2025","title":"클로저 입문 및 활용 정리","description":"JavaScript 클로저 개념과 예제를 코드 중심으로 정리한 글. 클로저는 함수가 선언될 당시의 스코프(lexical environment)를 기억하는 함수입니다. 함수가 실행된 이후에도 그 스코프에 접근할 수 있는 함수를 클로저라고 부릅니다. 기본 예제: 전역 변수 없이 상태 관리하기"}},{"excerpt":"JSX 기초 강의 이 문서는 React 초보자를 위해 JSX의 개념과 기본 문법, 활용법을 설명합니다. 1. JSX란 무엇인가? JSX(JavaScript XML)는 JavaScript 코드 안에서 HTML…","fields":{"slug":"/JSX/"},"frontmatter":{"date":"May 22, 2025","title":"JSX란 무엇인가?","description":"(JavaScript XML)는 JavaScript 코드 안에서 HTML과 유사한 문법을 사용할 수 있게 해 주는 **문법 설탕**입니다. 내부적으로는 모두 `React.createElement()` 호출로 변환되어, 최종적으로 DOM에 렌더링됩니다."}},{"excerpt":"개요 JavaScript의 이벤트 루프는 동기 코드, 태스크 큐(맥로태스크), 마이크로 태스크 큐를 통해 비동기 작업을 관리합니다. 본 포스트에서는 각 실행 방식의 차이점을 살펴보고 예제 코드를 통해 이해를 돕습니다.…","fields":{"slug":"/비동기-동기/"},"frontmatter":{"date":"May 22, 2025","title":"리액트에서 자주 사용하는 자바스크립트 문법","description":"JavaScript의 이벤트 루프는 동기 코드, 태스크 큐(맥로태스크), 마이크로 태스크 큐를 통해 비동기 작업을 관리합니다.  본 포스트에서는 각 실행 방식의 차이점을 살펴보고 예제 코드를 통해 이해를 돕습니다."}},{"excerpt":"This is my first post on my new fake blog! How exciting! I'm sure I'll write a lot more interesting things in the future. Oh, and here's a…","fields":{"slug":"/hello-world/"},"frontmatter":{"date":"May 01, 2015","title":"Hello World","description":"Hello World"}}]}},"pageContext":{}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}