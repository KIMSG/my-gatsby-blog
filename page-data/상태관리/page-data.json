{"componentChunkName":"component---src-templates-blog-post-js","path":"/상태관리/","result":{"data":{"site":{"siteMetadata":{"title":"모던리액트딥다이브 스터디를 하고 있습니다."}},"markdownRemark":{"id":"3700029f-490a-5c52-b5fc-cfd83ac18133","excerpt":"내눈에는 그냥 함수인데.... 이게 훅이라고 책에서는 설명해주더라. 이게 함수인지 아니면 훅인지 이런 구분은 어떻게 하는거야??? 겉으로 보면 단순한 함수처럼 보이지만, React에서는 \"훅(Hook)\"이라는 특별한 개념이 있어. 너가 본 도 겉보기엔 그냥 함수인데, React…","html":"<blockquote>\n<p>내눈에는 그냥 함수인데.... 이게 훅이라고 책에서는 설명해주더라. 이게 함수인지 아니면 훅인지 이런 구분은 어떻게 하는거야???</p>\n</blockquote>\n<blockquote>\n<p>겉으로 보면 단순한 함수처럼 보이지만, <strong>React에서는 \"훅(Hook)\"이라는 특별한 개념</strong>이 있어. 너가 본 <code class=\"language-text\">useCounter</code>도 겉보기엔 그냥 함수인데, React 기준에서는 **커스텀 훅(custom hook)**이라고 불러.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">useCounter</span><span class=\"token punctuation\">(</span>initCount<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n  counter<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\r\n  <span class=\"token function-variable function\">inc</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span>\r\n<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>counter<span class=\"token punctuation\">,</span> setCounter<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initCount<span class=\"token punctuation\">)</span>\r\n\r\n  <span class=\"token keyword\">function</span> <span class=\"token function\">inc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">setCounter</span><span class=\"token punctuation\">(</span>prev <span class=\"token operator\">=></span> prev <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> counter<span class=\"token punctuation\">,</span> inc <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>🔍 설명 요약:</h3>\n<ul>\n<li><code class=\"language-text\">useCounter(initCount: number = 0)</code> → 초기값을 <code class=\"language-text\">0</code>으로 기본 설정</li>\n<li><code class=\"language-text\">useState(initCount)</code> → 상태 초기화</li>\n<li><code class=\"language-text\">inc()</code> 함수는 상태를 1 증가시킴</li>\n<li>마지막에 <code class=\"language-text\">counter</code>와 <code class=\"language-text\">inc</code>를 <strong>객체로 리턴</strong>해서 컴포넌트에서 쉽게 구조분해할 수 있게 함</li>\n</ul>\n<p>이 훅은 예를 들어 이렇게 사용할 수 있어:</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> counter<span class=\"token punctuation\">,</span> inc <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useCounter</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\r\n\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">현재 값: </span><span class=\"token punctuation\">{</span>counter<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>inc<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">증가</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>그럼 뭐가 훅이고 뭐가 그냥 함수야?</h3>\n<p>**훅(hook)**인지 아닌지는 다음 조건으로 판단해:</p>\n<hr>\n<h3>✅ 1. <strong>이름이 <code class=\"language-text\">use</code>로 시작한다</strong></h3>\n<ul>\n<li><code class=\"language-text\">useCounter</code>, <code class=\"language-text\">useFetch</code>, <code class=\"language-text\">useState</code> 등처럼 이름이 <code class=\"language-text\">use</code>로 시작하면 <em>React 훅 규칙</em>에 따라 훅으로 인식해.</li>\n<li>이건 리액트 내부에서 사용하는 린트 규칙(ESLint plugin)이 검사할 정도로 중요한 규칙이야.</li>\n</ul>\n<hr>\n<h3>✅ 2. <strong>훅 안에서 React의 내장 훅(<code class=\"language-text\">useState</code>, <code class=\"language-text\">useEffect</code> 등)을 호출한다</strong></h3>\n<ul>\n<li><code class=\"language-text\">useCounter</code> 내부에서 <code class=\"language-text\">useState(initCount)</code>를 호출하고 있으니까, 리액트 훅을 <em>사용하고 있음</em> → 이건 \"훅\"으로 취급돼.</li>\n</ul>\n<hr>\n<h3>✅ 3. <strong>컴포넌트 함수 또는 다른 훅 안에서만 호출 가능하다</strong></h3>\n<ul>\n<li>\n<p><code class=\"language-text\">useCounter</code> 같은 커스텀 훅은 일반 함수처럼 아무 데서나 호출하면 안 되고,</p>\n<ul>\n<li>리액트 함수형 컴포넌트 안에서</li>\n<li>또는 다른 훅 안에서만 호출해야 해.</li>\n</ul>\n</li>\n<li>\n<p>이건 리액트의 규칙이자 제한이야. 그래야 상태 관리가 정상 작동함.</p>\n</li>\n</ul>\n<hr>\n<h3>정리하면</h3>\n<blockquote>\n<p><strong>훅은 \"use로 시작하고, 리액트 훅을 사용하며, 정해진 위치에서만 쓸 수 있는 함수\"다.</strong></p>\n</blockquote>\n<p>그래서 <code class=\"language-text\">useCounter()</code>는 <strong>함수이자 훅이야</strong>. 더 정확히 말하면:</p>\n<blockquote>\n<p><strong>\"훅(hook)은 특별한 규칙을 따르는 함수의 일종이다.\"</strong></p>\n</blockquote>\n<blockquote>\n<p>💡 훅으로 상태를 관리한다 =\r\n\"단순 변수 대신 useState 등 훅을 써서 값의 변화가 생기면 리액트가 다시 렌더링하게끔 만든다\"</p>\n</blockquote>\n<h2>좋은 예제 소스</h2>\n<ul>\n<li>useCounter라는 커스텀 훅을 사용해서 counter1과 counter2를 만들 때 소스코드를 줄였다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">useCounter</span><span class=\"token punctuation\">(</span>initCount<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>counter<span class=\"token punctuation\">,</span> setCounter<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initCount<span class=\"token punctuation\">)</span>\r\n\r\n  <span class=\"token keyword\">function</span> <span class=\"token function\">inc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">setCounter</span><span class=\"token punctuation\">(</span>prev <span class=\"token operator\">=></span> prev <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> counter<span class=\"token punctuation\">,</span> inc <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">Counter1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> counter<span class=\"token punctuation\">,</span> inc <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Counter1: </span><span class=\"token punctuation\">{</span>counter<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>inc<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">+</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">Counter2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> counter<span class=\"token punctuation\">,</span> inc <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Counter2: </span><span class=\"token punctuation\">{</span>counter<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>inc<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">+</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"리액트 훅으로 시작하는 상태관리","date":"May 26, 2025","description":"겉으로 보면 단순한 함수처럼 보이지만, **React에서는 `훅(Hook)`이라는 특별한 개념**이 있어. "}},"previous":{"fields":{"slug":"/nextjs입문/"},"frontmatter":{"title":"Next.js를 쓰는 기본"}},"next":{"fields":{"slug":"/고차컴포넌트(HOC)/"},"frontmatter":{"title":"리액트 고차 컴포넌트(HOC)"}}},"pageContext":{"id":"3700029f-490a-5c52-b5fc-cfd83ac18133","previousPostId":"e4d48a3b-f5f4-5706-98e8-335b59f23c6e","nextPostId":"4c35f559-b499-56d6-a10c-e8250da4e834"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}